/*
Formulario Registrar Cuentas
 */
package VistaCuentas;

//Importa los paquetes y clases a utilizar en este formulario
import javax.swing.JOptionPane;
import ControlObjetos.ControlObjetosCuentas;
import Modelos.ModeloDatosCuentas;
import Utilitarios.*;
import Modelos.ModeloDatosBitacora;
import Modelos.ModeloDatosUsuarios;
import VistaInicio.MenuPrincipal;

public class RegistrarCuentas extends javax.swing.JFrame {

    ControlObjetosCuentas co = new ControlObjetosCuentas();
    ModeloDatosCuentas md = new ModeloDatosCuentas();
    ModeloDatosBitacora mb = new ModeloDatosBitacora();
    ModeloDatosUsuarios mu = new ModeloDatosUsuarios();
    FechaSistema f = new FechaSistema();
    Validaciones v = new Validaciones();
    
    //Constructor
    public RegistrarCuentas() {
        initComponents();
        co.bloquearobjetosregistrar(jButton1, jButton2, 
                jComboBox1, jComboBox2, 
                jComboBox3, jComboBox4, 
                jTextField1, jTextField2, 
                jTextField3);
        desplegarfechasistema();
        md.cargarcomboclientes(jComboBox1);
        co.cargarcombocuenta(jComboBox2);
        co.cargarcombomoneda(jComboBox3);
        co.cargarcombocondicioncuenta(jComboBox4);
    }
    
    public void desplegarfechasistema(){
        //Despliega la fecha del sistema en el campo texto
        jTextField2.setText("" + f.imprimefecha());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Formulario Registrar Cuentas");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Registrar Cuentas");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 51));
        jLabel2.setText("Identificación");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 51));
        jLabel3.setText("Clientes Registrados");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(51, 51, 0));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(51, 51, 0));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 51));
        jLabel4.setText("Fecha Apertura");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 51));
        jLabel5.setText("Tipo Cuenta");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 51));
        jLabel6.setText("Tipo Moneda");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 51));
        jLabel8.setText("Monto Apertura");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 51));
        jLabel9.setText("Condición Cuenta");

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(51, 51, 0));

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(51, 51, 0));
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(51, 51, 0));

        jComboBox3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox3.setForeground(new java.awt.Color(51, 51, 0));

        jComboBox4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox4.setForeground(new java.awt.Color(51, 51, 0));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/agregar-archivo.png"))); // NOI18N
        jButton2.setText("Registrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/limpiar.png"))); // NOI18N
        jButton3.setText("Limpiar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/deshacer.png"))); // NOI18N
        jButton4.setText("Regresar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/recibo.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, 135, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4)))))
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(104, 104, 104)
                .addComponent(jLabel11)
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jButton2)
                        .addGap(100, 100, 100)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
    Evento click del combo para que le asigne al campo texto el elemento 
    seleccionado del combo
    */
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //Asigna al campo texto, el elemento seleccionado del combo
        jTextField1.setText("" + jComboBox1.getSelectedItem());
    }//GEN-LAST:event_jComboBox1ActionPerformed

    //Botón Buscar
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*
        Aquí verifica que el campo texto no esté vacío
        */
        if (jTextField1.getText().equals("")){
            JOptionPane.showMessageDialog(null, 
                    "Faltan Datos por Completar",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();
        }else{
            /*
            Aquí llama a la función buscaridentificacion del modelo datos
            */
            if (md.buscaridentificacion(jTextField1.getText())==1){
                JOptionPane.showMessageDialog(null, 
                        "Cliente Encontrado. Puede Registrar Nueva Cuenta",
                        "Información",
                        JOptionPane.INFORMATION_MESSAGE);
                jTextField1.requestFocus();
                co.desbloquearobjetosregistrar(jButton1, jButton2, 
                        jComboBox1, jComboBox2, 
                        jComboBox3, jComboBox4, 
                        jTextField1, jTextField2, 
                        jTextField3);
                jTextField2.requestFocus();
            }else{
                JOptionPane.showMessageDialog(null, 
                        "Cliente No está Registrado",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    //Botón Registrar
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ingresardatos(evt);
    }//GEN-LAST:event_jButton2ActionPerformed

    //Botón Limpiar
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        co.limpiarcampostextosregistrar(jTextField1, jTextField2, jTextField3);
        co.bloquearobjetosregistrar(jButton1, jButton2, 
                jComboBox1, jComboBox2, 
                jComboBox3, jComboBox4, 
                jTextField1, jTextField2, 
                jTextField3);
        desplegarfechasistema();
    }//GEN-LAST:event_jButton3ActionPerformed

    //Botón regresar
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        MenuPrincipal mp = new MenuPrincipal();
        mp.show(); //Muestra el form instanciado
        this.hide(); //Oculta el form actual de donde se instanció
        this.dispose(); //Elimina el espacio en memoria ocupado por el menú
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        v.solonumeros(evt);
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        v.solonumeros(evt);
    }//GEN-LAST:event_jTextField3KeyTyped

    public void ingresardatos(java.awt.event.ActionEvent e){
        //Instancia el form RegistrarClientes
        RegistrarCuentas rc = new RegistrarCuentas();
        //Aquí se verifica que los campos texto tengan datos almacenados
        if (jTextField2.getText().equals("") ||
                jTextField3.getText().equals("")){
            JOptionPane.showMessageDialog(null,
                    "Faltan Datos por Completar",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            /*
            Estos if´s son para controlar especificamente cada uno de los 
            campos textos
            */
            if (jTextField3.getText().isEmpty()){
                jTextField3.requestFocus();
            }
            if (jTextField2.getText().isEmpty()){
                jTextField2.requestFocus();
            }
        }else{
            //Variables locales
            String tipocuenta = "" + jComboBox2.getSelectedItem(); 
            String tipomoneda = "" + jComboBox3.getSelectedItem(); 
            String condcuenta = "" + jComboBox4.getSelectedItem();
            double montoapert = Double.parseDouble(jTextField3.getText());
            /*
            Condición para verificar el tipo de cuenta y de moneda que el cliente
            quiere registrar COrriente colones
            */
            if ((jComboBox2.getSelectedItem().equals("Corriente"))&&(jComboBox3.getSelectedItem().equals("Colones"))){
                //El monto minimo de apertura de este tipo de cuentas es 100000
                if (montoapert < 100000){
                    JOptionPane.showMessageDialog(null,
                    "El Monto Mínimo de Apertura para este tipo de Cuentas es ¢100 000",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                }else{
                    /*
                    Aquí llama a la funcion para ingresar un cliente en la tablacuentas
                    */
                    if (md.ingresarcuentas(jTextField2.getText(),
                            tipocuenta,
                            tipomoneda,
                            montoapert,
                            jTextField1.getText(),
                            100000,
                            condcuenta)==true){
                        JOptionPane.showMessageDialog(null,
                            "Cuenta Agregada Correctamente",
                            "Información",
                            JOptionPane.INFORMATION_MESSAGE);
                        /*
                        Llama al método ingresarbitacora del modelo para que se registre
                        el movimiento en la bitácora
                        */
                        mb.ingresarbitacora(f.imprimefecha(), mu.ploginusuario, rc.getTitle());
                        co.limpiarcampostextosregistrar(jTextField1, jTextField2, 
                                jTextField3);
                        co.bloquearobjetosregistrar(jButton1, jButton2, 
                                jComboBox1, jComboBox2, 
                                jComboBox3, jComboBox4, 
                                jTextField1, jTextField2, 
                                jTextField3);
                        desplegarfechasistema();
                        jTextField1.requestFocus();
                    }else{
                        JOptionPane.showMessageDialog(null,
                            "Cuenta No Registrada",
                            "Advertencia",
                            JOptionPane.WARNING_MESSAGE);
                    }
                }
            }else{
                /*
                Condición para verificar el tipo de cuenta y de moneda que el cliente
                quiere registrar
                */
                if ((jComboBox2.getSelectedItem().equals("Corriente"))&&(jComboBox3.getSelectedItem().equals("Dólares"))){
                    //El monto minimo de apertura de este tipo de cuentas es $250
                    if (montoapert < 250){
                        JOptionPane.showMessageDialog(null,
                        "El Monto Mínimo de Apertura para este tipo de Cuentas es $250",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                    }else{
                        /*
                        Aquí llama a la funcion para ingresar un cliente en la tablacuentas
                        */
                        if (md.ingresarcuentas(jTextField2.getText(),
                                tipocuenta,
                                tipomoneda,
                                montoapert,
                                jTextField1.getText(),
                                250,
                                condcuenta)==true){
                            JOptionPane.showMessageDialog(null,
                                "Cuenta Agregada Correctamente",
                                "Información",
                                JOptionPane.INFORMATION_MESSAGE);
                            mb.ingresarbitacora(f.imprimefecha(), mu.ploginusuario, rc.getTitle());
                            co.limpiarcampostextosregistrar(jTextField1, jTextField2, 
                                    jTextField3);
                            co.bloquearobjetosregistrar(jButton1, jButton2, 
                                    jComboBox1, jComboBox2, 
                                    jComboBox3, jComboBox4, 
                                    jTextField1, jTextField2, 
                                    jTextField3);
                            desplegarfechasistema();
                            jTextField1.requestFocus();
                        }else{
                            JOptionPane.showMessageDialog(null,
                                "Cuenta No Registrada",
                                "Advertencia",
                                JOptionPane.WARNING_MESSAGE);
                        }
                    }
                }else{
                    /*
                    Condición para verificar el tipo de cuenta y de moneda que el cliente
                    quiere registrar
                    */
                    if ((jComboBox2.getSelectedItem().equals("Ahorro"))&&(jComboBox3.getSelectedItem().equals("Colones"))){
                        //El monto minimo de apertura de este tipo de cuentas es 50000
                        if (montoapert < 50000){
                            JOptionPane.showMessageDialog(null,
                            "El Monto Mínimo de Apertura para este tipo de Cuentas es ¢50 000",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                        }else{
                            /*
                            Aquí llama a la funcion para ingresar un cliente en la tablacuentas
                            */
                            if (md.ingresarcuentas(jTextField2.getText(),
                                    tipocuenta,
                                    tipomoneda,
                                    montoapert,
                                    jTextField1.getText(),
                                    50000,
                                    condcuenta)==true){
                                JOptionPane.showMessageDialog(null,
                                    "Cuenta Agregada Correctamente",
                                    "Información",
                                    JOptionPane.INFORMATION_MESSAGE);
                                mb.ingresarbitacora(f.imprimefecha(), mu.ploginusuario, rc.getTitle());
                                co.limpiarcampostextosregistrar(jTextField1, jTextField2, 
                                        jTextField3);
                                co.bloquearobjetosregistrar(jButton1, jButton2, 
                                        jComboBox1, jComboBox2, 
                                        jComboBox3, jComboBox4, 
                                        jTextField1, jTextField2, 
                                        jTextField3);
                                desplegarfechasistema();
                                jTextField1.requestFocus();
                            }else{
                                JOptionPane.showMessageDialog(null,
                                    "Cuenta No Registrada",
                                    "Advertencia",
                                    JOptionPane.WARNING_MESSAGE);
                            }
                        }
                    }else{
                        /*
                        Condición para verificar el tipo de cuenta y de moneda que el cliente
                        quiere registrar
                        */
                        if ((jComboBox2.getSelectedItem().equals("Ahorro"))&&(jComboBox3.getSelectedItem().equals("Dólares"))){
                            //El monto minimo de apertura de este tipo de cuentas es $125
                            if (montoapert < 125){
                                JOptionPane.showMessageDialog(null,
                                "El Monto Mínimo de Apertura para este tipo de Cuentas es $125",
                                "Error",
                                JOptionPane.ERROR_MESSAGE);
                            }else{
                                /*
                                Aquí llama a la funcion para ingresar un cliente en la tablacuentas
                                */
                                if (md.ingresarcuentas(jTextField2.getText(),
                                        tipocuenta,
                                        tipomoneda,
                                        montoapert,
                                        jTextField1.getText(),
                                        125,
                                        condcuenta)==true){
                                    JOptionPane.showMessageDialog(null,
                                        "Cuenta Agregada Correctamente",
                                        "Información",
                                        JOptionPane.INFORMATION_MESSAGE);
                                    mb.ingresarbitacora(f.imprimefecha(), mu.ploginusuario, rc.getTitle());
                                    co.limpiarcampostextosregistrar(jTextField1, jTextField2, 
                                            jTextField3);
                                    co.bloquearobjetosregistrar(jButton1, jButton2, 
                                            jComboBox1, jComboBox2, 
                                            jComboBox3, jComboBox4, 
                                            jTextField1, jTextField2, 
                                            jTextField3);
                                    desplegarfechasistema();
                                    jTextField1.requestFocus();
                                }else{
                                    JOptionPane.showMessageDialog(null,
                                        "Cuenta No Registrada",
                                        "Advertencia",
                                        JOptionPane.WARNING_MESSAGE);
                                }
                            }
                        }//Fin de la condicion Ahorro/Dólares
                    }//Fin de la condición Ahorro/Colones
                }//Fin de la condicion Corriente/Dólares
            }//Fin de la condición Corriente/Colones
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarCuentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarCuentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
